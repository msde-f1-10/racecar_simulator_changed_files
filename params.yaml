# The distance between the front and
# rear axle of the racecar
wheelbase: 0.3302 # meters
# width of racecar
width: 0.2032 # meters

# Limits on the speed and steering angle
max_speed: 4. #  meters/second
max_steering_angle: 0.4189 # radians
max_accel: 3. # meters/second^2
max_steering_vel: 5.0 # radians/second
friction_coeff: 1. # - (complete estimate)
height_cg: 0.08255 # m (roughly measured to be 3.25 in)
l_cg2rear: 0.17145 # m (decently measured to be 6.75 in)
l_cg2front: 0.15875 # m (decently measured to be 6.25 in)
C_S_front: 2.3 #.79 # 1/rad ? (estimated weight/4)
C_S_rear: 2.3 #.79 # 1/rad ? (estimated weight/4)
mass: 3.17 # kg (measured on car 'lidart')
moment_inertia: .0398378 # kg m^2 (estimated as a rectangle with width and height of car and evenly distributed mass, then shifted to account for center of mass location)

# The rate at which the pose and the lidar publish
update_pose_rate: 0.001

# Lidar simulation parameters
scan_beams: 1080
scan_field_of_view: 6.2831853 #4.71 # radians


# The distance from the center of the
# rear axis (base_link) to the lidar
scan_distance_to_base_link: 0.275 # meters

# The standard deviation of the noise applied
# to the lidar simulation
scan_std_dev: 0.01 # meters

# The probability threshold for points
# in the occupancy grid to be considered "free".
# Used for the lidar simulator.
map_free_threshold: 0.8

# Time to collision cutoff value
ttc_threshold: 0.01

# Safety margin for collision avoidance assisted driving
coll_threshold: 0.6

# Indices for mux controller
mux_size: 5
joy_mux_idx: 0
key_mux_idx: 1
safety_copilot_mux_idx: 2
random_walker_mux_idx: 3
# **Add index for new planning method here**
# **(increase mux_size accordingly)**
pure_pursuit_mux_idx: 4

# Enables joystick if true
joy: true
# Joystick indices
joy_speed_axis: 1
joy_angle_axis: 2
joy_max_speed: 2. # meters/second
# Joystick indices for toggling mux
joy_button_idx: 4  # LB button
key_button_idx: 6 # not sure 
copilot_button_idx: 0 # A button
random_walk_button_idx: 5 # RB button
# **Add button for new planning method here**
pure_pursuit_button_idx: 7

# Keyboard characters for toggling mux
joy_key_char: "j"
keyboard_key_char: "k"
copilot_key_char: "p"
random_walk_key_char: "r"
# **Add button for new planning method here**
pure_pursuit_key_char: "z"


# map-collision parameters
inflation_size: 5

# obstacle parameters
obstacle_size: 2

# The names of topics to listen and publish to
joy_topic: "/joy"
drive_topic: "/drive"
map_topic: "/map"
distance_transform_topic: "/dt"
scan_topic: "/scan"
pose_topic: "/vesc/pose"  #/pose
odom_topic: "/vesc/odom"  #/odom
imu_topic: "/imu"
pose_rviz_topic: "/initialpose"
keyboard_topic: "/key"
mux_topic: "/mux"

# Topic names of various drive channels
rand_drive_topic: "/rand_drive"
# **Add name for new planning method here**
pure_pursuit_drive_topic: "/pure_pursuit_drive"


# name of file to write collision log to 
collision_file: "collision_file"


# The names of opponent car's topics to listen and publish to
opponent_drive_topic: "/op_drive"
opponent_scan_topic: "/op_scan"
opponent_pose_topic: "/op_pose"
opponent_odom_topic: "/op_odom"
opponent_pose_rviz_topic: "/move_base_simple/goal"


# The names of the transformation frames published to
map_frame: "map"
base_frame: "base_link"
opponent_base_frame: "op_base_link"
scan_frame: "laser"
opponent_scan_frame: "op_laser"

# Turn this off for mapping
broadcast_transform: true

# Scan to image parameters
converted_image_topic: "/converted_scan"
image_size: 64
image_res: 0.05
car_width: 7
car_length: 9
# colors, bgr, ints
background_color: [0, 255, 0]
road_color: [100, 100, 100]
car_color: [0, 0, 255]
